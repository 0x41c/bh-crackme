0x0000 (0000): push 3003
0x0006 (0006): push 0
0x000C (0012): xor
0x000D (0013): spc

0x000E (0014): add
0x000F (0015): push 2
0x0015 (0021): push 16
0x001B (0027): rvstk 2
0x001D (0029): sq
0x001E (0030): rvstk 2
0x0020 (0032): mod
0x0021 (0033): cpy
0x0022 (0034): st 1, 6 // variables[1][6] = pop()
0x0025 (0037): push 1
0x002B (0043): lpc
0x002C (0044): cpy
0x002D (0045): push 26
0x0033 (0051): push 35
0x0039 (0057): xor
0x003A (0058): add
0x003B (0059): rvstk 2
0x003D (0061): push 3288
0x0043 (0067): push 38
0x0049 (0073): xor
0x004A (0074): sub
0x004B (0075): push 56
0x0051 (0081): push 1
0x0057 (0087): xor
0x0058 (0088): rvstk 2
0x005A (0090): sub
0x005B (0091): rvstk 3
0x005D (0093): rvstk 2
0x005F (0095): rvstk 3
0x0061 (0097): mul
0x0062 (0098): add
0x0063 (0099): spc

0x0064 (0100): st
0x0065 (0101): lnt
0x0066 (0102): lpc
0x0067 (0103): cpy
0x0068 (0104): push 78
0x006E (0110): push 119
0x0074 (0116): xor
0x0075 (0117): add
0x0076 (0118): rvstk 2
0x0078 (0120): push 5351
0x007E (0126): push 1
0x0084 (0132): xor
0x0085 (0133): sub
0x0086 (0134): push 121
0x008C (0140): push 64
0x0092 (0146): xor
0x0093 (0147): rvstk 2
0x0095 (0149): sub
0x0096 (0150): rvstk 3
0x0098 (0152): rvstk 2
0x009A (0154): rvstk 3
0x009C (0156): mul
0x009D (0157): add
0x009E (0158): spc

0x009F (0159): push 4
0x00A5 (0165): push 2
0x00AB (0171): pshvar
0x00AC (0172): subscr
0x00AD (0173): subscr
0x00AE (0174): push 3
0x00B4 (0180): push 2
0x00BA (0186): pshvar
0x00BB (0187): push 1
0x00C1 (0193): lpc
0x00C2 (0194): cpy
0x00C3 (0195): push 94
0x00C9 (0201): push 103
0x00CF (0207): xor
0x00D0 (0208): add
0x00D1 (0209): rvstk 2
0x00D3 (0211): push 4677
0x00D9 (0217): push 108
0x00DF (0223): xor
0x00E0 (0224): sub
0x00E1 (0225): push 163
0x00E7 (0231): push 154
0x00ED (0237): xor
0x00EE (0238): rvstk 2
0x00F0 (0240): sub
0x00F1 (0241): rvstk 3
0x00F3 (0243): rvstk 2
0x00F5 (0245): rvstk 3
0x00F7 (0247): mul
0x00F8 (0248): add
0x00F9 (0249): spc
0x00FA (0250): push 5
0x0100 (0256): push 2
0x0106 (0262): pshvar
0x0107 (0263): subscr
0x0108 (0264): subscr
0x0109 (0265): push 1
0x010F (0271): push 5
0x0115 (0277): push 2
0x011B (0283): pshvar
0x011C (0284): subscr
0x011D (0285): push 4828
0x0123 (0291): push 57
0x0129 (0297): xor
0x012A (0298): spc

0x012B (0299): cpy
0x012C (0300): push "map"
0x0133 (0307): rvstk 2
0x0135 (0309): subscr

0x0136 (0310): def 3921 // function start below

0x013A (0314): incstk 1
0x013C (0316): decstk 1
0x013E (0318): rvstk 1
0x0140 (0320): st 3, 0 // variables[3][0] = pop()
0x0143 (0323): ld 3, 0 // push(variables[3][0])
0x0146 (0326): push 4059
0x014C (0332): push 226
0x0152 (0338): xor
0x0153 (0339): spc

0x0154 (0340): pop
0x0155 (0341): pshwnd
0x0156 (0342): subscr
0x0157 (0343): push "prototype"
0x0164 (0356): rvstk 2
0x0166 (0358): subscr
0x0167 (0359): push "toString"
0x0173 (0371): rvstk 2
0x0175 (0373): subscr
0x0176 (0374): st 2, 1 // variables[2][1] = pop()
0x0179 (0377): push 1
0x017F (0383): push 2
0x0185 (0389): pshvar
0x0186 (0390): subscr
0x0187 (0391): subscr
0x0188 (0392): push 2224
0x018E (0398): push 260
0x0194 (0404): xor
0x0195 (0405): spc

0x0196 (0406): pshvar
0x0197 (0407): subscr
0x0198 (0408): subscr
0x0199 (0409): rvstk 2
0x019B (0411): ls
0x019C (0412): rvstk 2
0x019E (0414): add
0x019F (0415): cpy
0x01A0 (0416): ld 2, 2 // push(variables[2][2])
0x01A3 (0419): pushcp 2787
0x01A7 (0423): thrs
0x01A8 (0424): rvstk 2
0x01AA (0426): sub
0x01AB (0427): push 0
0x01B1 (0433): rvstk 2
0x01B3 (0435): st
0x01B4 (0436): lpc
0x01B5 (0437): cpy
0x01B6 (0438): push 96
0x01BC (0444): push 89
0x01C2 (0450): xor
0x01C3 (0451): add
0x01C4 (0452): rvstk 2
0x01C6 (0454): push 1852
0x01CC (0460): push 149
0x01D2 (0466): xor
0x01D3 (0467): sub
0x01D4 (0468): push 21
0x01DA (0474): push 44
0x01E0 (0480): xor
0x01E1 (0481): rvstk 2
0x01E3 (0483): sub
0x01E4 (0484): rvstk 3
0x01E6 (0486): rvstk 2
0x01E8 (0488): rvstk 3
0x01EA (0490): mul
0x01EB (0491): add
0x01EC (0492): spc

0x01ED (0493): ld 2, 2 // push(variables[2][2])
0x01F0 (0496): push 1
0x01F6 (0502): ld 2, 2 // push(variables[2][2])
0x01F9 (0505): add
0x01FA (0506): st 2, 2 // variables[2][2] = pop()
0x01FD (0509): push 3197
0x0203 (0515): push 56
0x0209 (0521): xor
0x020A (0522): spc

0x020B (0523): ld 2, 3 // push(variables[2][3])
0x020E (0526): rvstk 2
0x0210 (0528): add
0x0211 (0529): ld 2, 1 // push(variables[2][1])
0x0214 (0532): asnarr
0x0215 (0533): clrstk
0x0216 (0534): push 3
0x021C (0540): push 2
0x0222 (0546): pshvar
0x0223 (0547): subscr
0x0224 (0548): subscr
0x0225 (0549): push 1
0x022B (0555): push 1
0x0231 (0561): lpc
0x0232 (0562): cpy
0x0233 (0563): push 158
0x0239 (0569): push 167
0x023F (0575): xor
0x0240 (0576): add
0x0241 (0577): rvstk 2
0x0243 (0579): push 5662
0x0249 (0585): push 118
0x024F (0591): xor
0x0250 (0592): sub
0x0251 (0593): push 22
0x0257 (0599): push 47
0x025D (0605): xor
0x025E (0606): rvstk 2
0x0260 (0608): sub
0x0261 (0609): rvstk 3
0x0263 (0611): rvstk 2
0x0265 (0613): rvstk 3
0x0267 (0615): mul
0x0268 (0616): add
0x0269 (0617): spc

0x026A (0618): pop
0x026B (0619): subscr
0x026C (0620): subscr
0x026D (0621): push 1
0x0273 (0627): ld 2, 5 // push(variables[2][5])
0x0276 (0630): add
0x0277 (0631): st 2, 5 // variables[2][5] = pop()
0x027A (0634): pop
0x027B (0635): push 5744
0x0281 (0641): push 456
0x0287 (0647): xor
0x0288 (0648): spc

0x0289 (0649): push 2
0x028F (0655): pshvar
0x0290 (0656): subscr
0x0291 (0657): subscr
0x0292 (0658): push 8
0x0298 (0664): push 4522
0x029E (0670): push 252
0x02A4 (0676): xor
0x02A5 (0677): spc

0x02A6 (0678): add
0x02A7 (0679): push 7
0x02AD (0685): push 2
0x02B3 (0691): pshvar
0x02B4 (0692): subscr
0x02B5 (0693): asnarr
0x02B6 (0694): pop
0x02B7 (0695): ld 2, 7 // push(variables[2][7])
0x02BA (0698): push 4
0x02C0 (0704): push 2143
0x02C6 (0710): push 513
0x02CC (0716): xor
0x02CD (0717): spc

0x02CE (0718): push 2
0x02D4 (0724): pshvar
0x02D5 (0725): subscr
0x02D6 (0726): subscr
0x02D7 (0727): add
0x02D8 (0728): push 1878
0x02DE (0734): push 408
0x02E4 (0740): xor
0x02E5 (0741): spc

0x02E6 (0742): subscr
0x02E7 (0743): subscr
0x02E8 (0744): ret

0x02E9 (0745): push null
0x02EB (0747): ret

0x02EC (0748): push 3
0x02F2 (0754): push 1
0x02F8 (0760): pshvar
0x02F9 (0761): subscr
0x02FA (0762): asnarr

0x02FB (0763): def 5113 // function start below

0x02FF (0767): pushcp 2154
0x0303 (0771): thrs

// ----
// Conditional Branch
// ---

// Setup rel-addr-1
0x0304 (0772): lpc          // [..., 772]                   ; 0
0x0305 (0773): cpy          // [..., 772, 772]              ; 1
0x0306 (0774): push 78      // [..., 772, 772, 78]          ; 2
0x030C (0780): push 119     // [..., 772, 772, 78, 119]     ; 3
0x0312 (0786): xor          // [..., 772, 772, 57]          ; 4
0x0313 (0787): add          // [..., 772, 829]              ; 5

// Setup rel-addr-2-pt-1
0x0314 (0788): rvstk 2      // [..., 829, 772]              ; 6
0x0316 (0790): push 1358    // [..., 829, 772, 1358]        ; 7
0x031C (0796): push 330     // [..., 829, 772, 1358, 330]   ; 8
0x0322 (0802): xor          // [..., 829, 772, 1028]        ; 9
0x0323 (0803): sub          // [..., 829, 256]              ; 10

// Setup rel-addr-2-pt-2
0x0324 (0804): push 57      // [..., 829, 256, 57]          ; 11
0x032A (0810): push 0       // [..., 829, 256, 57, 0]       ; 12
0x0330 (0816): xor          // [..., 829, 256, 57]          ; 13
0x0331 (0817): rvstk 2      // [..., 829, 57, 256]          ; 14
0x0333 (0819): sub          // [..., 829, 199]              ; 15

// Prepare flag
0x0334 (0820): rvstk 3      // [..., 199, 829, x]           ; 16
0x0336 (0822): rvstk 2      // [..., 199, x, 829]           ; 17
0x0338 (0824): rvstk 3      // [..., 829, x, 199]           ; 18

// Multiply offset out
0x033A (0826): mul          // [..., 829, 199 || 0]         ; 19
0x033B (0827): add          // [..., (829 || 829 + 199)]    ; 20
0x033C (0828): spc // 829 || 1028


0x033D (0829): push 0
0x0343 (0835): lnt
0x0344 (0836): ret

0x0345 (0837): push null
0x0347 (0839): ret

0x0348 (0840): st 1, 5 // variables[1][5] = pop()
0x034B (0843): push null
0x034D (0845): push 0
0x0353 (0851): push 2411
0x0359 (0857): push 507
0x035F (0863): xor
0x0360 (0864): spc

0x0361 (0865): push 1
0x0367 (0871): pshvar
0x0368 (0872): subscr
0x0369 (0873): asnarr
0x036A (0874): ld 1, 5 // push(variables[1][5])
0x036D (0877): cpy
0x036E (0878): pushcp 2516
0x0372 (0882): thr
0x0373 (0883): pop
0x0374 (0884): push 1
0x037A (0890): push 2
0x0380 (0896): pshvar
0x0381 (0897): subscr
0x0382 (0898): subscr
0x0383 (0899): ld 2, 0 // push(variables[2][0])
0x0386 (0902): push "length"
0x0390 (0912): rvstk 2
0x0392 (0914): subscr
0x0393 (0915): push 1428
0x0399 (0921): push 425
0x039F (0927): xor
0x03A0 (0928): spc

0x03A1 (0929): rvstk 2
0x03A3 (0931): subscr
0x03A4 (0932): ld 2, 1 // push(variables[2][1])
0x03A7 (0935): ld 2, 5 // push(variables[2][5])
0x03AA (0938): rvstk 2
0x03AC (0940): subscr
0x03AD (0941): rvstk 2
0x03AF (0943): push 1302
0x03B5 (0949): push 141
0x03BB (0955): xor
0x03BC (0956): spc

0x03BD (0957): clrstk
0x03BE (0958): ld 2, 5 // push(variables[2][5])
0x03C1 (0961): push 24
0x03C7 (0967): rvstk 2
0x03C9 (0969): st
0x03CA (0970): lnt

0x03CB (0971): lpc
0x03CC (0972): cpy
0x03CD (0973): push 118
0x03D3 (0979): push 79
0x03D9 (0985): xor
0x03DA (0986): add
0x03DB (0987): rvstk 2
0x03DD (0989): push 702
0x03E3 (0995): push 387
0x03E9 (1001): xor
0x03EA (1002): sub
0x03EB (1003): push 47
0x03F1 (1009): push 22
0x03F7 (1015): xor
0x03F8 (1016): rvstk 2
0x03FA (1018): sub
0x03FB (1019): rvstk 3
0x03FD (1021): rvstk 2
0x03FF (1023): rvstk 3
0x0401 (1025): mul
0x0402 (1026): add
0x0403 (1027): spc

0x0404 (1028): ld 2, 3 // push(variables[2][3])
0x0407 (1031): push 5
0x040D (1037): push 2
0x0413 (1043): pshvar
0x0414 (1044): subscr
0x0415 (1045): subscr
0x0416 (1046): push 610
0x041C (1052): push 451
0x0422 (1058): xor
0x0423 (1059): spc // 929

0x0424 (1060): asnarr

0x0425 (1061): def 840 // function start below

0x0429 (1065): incstk 2
0x042B (1067): decstk 2
0x042D (1069): rvstk 2
0x042F (1071): st 2, 0 // variables[2][0] = pop()
0x0432 (1074): st 2, 1 // variables[2][1] = pop()
0x0435 (1077): ld 1, 6 // push(variables[1][6])
0x0438 (1080): pushcp 2461
0x043C (1084): thrs
0x043D (1085): rvstk 2
0x043F (1087): st
0x0440 (1088): lpc
0x0441 (1089): cpy
0x0442 (1090): push 37
0x0448 (1096): push 28
0x044E (1102): xor
0x044F (1103): add
0x0450 (1104): rvstk 2
0x0452 (1106): push 5511
0x0458 (1112): push 804
0x045E (1118): xor
0x045F (1119): sub
0x0460 (1120): push 117
0x0466 (1126): push 76
0x046C (1132): xor
0x046D (1133): rvstk 2
0x046F (1135): sub
0x0470 (1136): rvstk 3
0x0472 (1138): rvstk 2
0x0474 (1140): rvstk 3
0x0476 (1142): mul
0x0477 (1143): add
0x0478 (1144): spc

0x0479 (1145): push null
0x047B (1147): ret

0x047C (1148): st 1, 2 // variables[1][2] = pop()

0x047F (1151): pushcp 4092
0x0483 (1155): thr

0x0484 (1156): ld 2, 3 // push(variables[2][3])
0x0487 (1159): ld 2, 2 // push(variables[2][2])
0x048A (1162): push "length"
0x0494 (1172): rvstk 2
0x0496 (1174): subscr
0x0497 (1175): rvstk 2
0x0499 (1177): sub
0x049A (1178): push 0
0x04A0 (1184): rvstk 2
0x04A2 (1186): st
0x04A3 (1187): lnt

0x04A4 (1188): lpc      // [..., 1188]
0x04A5 (1189): cpy      // [..., 1188, 1188]
0x04A6 (1190): push 11  // [..., 1188, 1188, 11]
0x04AC (1196): push 50  // [..., 1188, 1188, 11, 50]
0x04B2 (1202): xor      // [..., 1188, 1188, 57]
0x04B3 (1203): add      // [..., 1188, 1245]

0x04B4 (1204): rvstk 2  // [..., 1245, 1188]
0x04B6 (1206): push 5333// [..., 1245, 1188, 5333]
0x04BC (1212): push 761 // [..., 1245, 1188, 5333, 761]
0x04C2 (1218): xor      // [..., 1245, 1188, 5676]
0x04C3 (1219): sub      // [..., 1245, 4488]

0x04C4 (1220): push 59  // [..., 1245, 4488, 59]
0x04CA (1226): push 2   // [..., 1245, 4488, 59, 2]
0x04D0 (1232): xor      // [..., 1245, 4488, 57]
0x04D1 (1233): rvstk 2  // [..., 1245, 57, 4488]
0x04D3 (1235): sub      // [..., 1245, 4431]
0x04D4 (1236): rvstk 3  // [..., 4431, 1245, x]
0x04D6 (1238): rvstk 2  // [..., 4431, x, 1245]
0x04D8 (1240): rvstk 3  // [..., 1245, x, 4431]
0x04DA (1242): mul      // 
0x04DB (1243): add
0x04DC (1244): spc

0x04DD (1245): ld 2, 0 // push(variables[2][0])
0x04E0 (1248): push 4879
0x04E6 (1254): push 937
0x04EC (1260): xor
0x04ED (1261): spc

0x04EE (1262): ld 2, 5 // push(variables[2][5])
0x04F1 (1265): push 24
0x04F7 (1271): rvstk 2
0x04F9 (1273): sub
0x04FA (1274): push 0
0x0500 (1280): rvstk 2
0x0502 (1282): st
0x0503 (1283): push 875
0x0509 (1289): push 111
0x050F (1295): xor
0x0510 (1296): spc

0x0511 (1297): push 3
0x0517 (1303): push 2
0x051D (1309): pshvar
0x051E (1310): subscr
0x051F (1311): asnarr
0x0520 (1312): clrstk
0x0521 (1313): ld 2, 3 // push(variables[2][3])
0x0524 (1316): push 8
0x052A (1322): rvstk 2
0x052C (1324): sub
0x052D (1325): push 0
0x0533 (1331): rvstk 2
0x0535 (1333): st
0x0536 (1334): lnt
0x0537 (1335): pushcp 1904
0x053B (1339): thrs
0x053C (1340): push 233
0x0542 (1346): rvstk 2
0x0544 (1348): xor
0x0545 (1349): cpy
0x0546 (1350): ld 2, 5 // push(variables[2][5])
0x0549 (1353): ld 2, 6 // push(variables[2][6])
0x054C (1356): asnarr
0x054D (1357): clrstk
0x054E (1358): push 5
0x0554 (1364): push 2
0x055A (1370): pshvar
0x055B (1371): subscr
0x055C (1372): push 1
0x0562 (1378): lpc
0x0563 (1379): cpy
0x0564 (1380): push 185
0x056A (1386): push 128
0x0570 (1392): xor
0x0571 (1393): add
0x0572 (1394): rvstk 2
0x0574 (1396): push 3220
0x057A (1402): push 1018
0x0580 (1408): xor
0x0581 (1409): sub
0x0582 (1410): push 140
0x0588 (1416): push 181
0x058E (1422): xor
0x058F (1423): rvstk 2
0x0591 (1425): sub
0x0592 (1426): rvstk 3
0x0594 (1428): rvstk 2
0x0596 (1430): rvstk 3
0x0598 (1432): mul
0x0599 (1433): add
0x059A (1434): spc
0x059B (1435): neq
0x059C (1436): lnt
0x059D (1437): lpc
0x059E (1438): cpy
0x059F (1439): push 190
0x05A5 (1445): push 135
0x05AB (1451): xor
0x05AC (1452): add
0x05AD (1453): rvstk 2
0x05AF (1455): push 1887
0x05B5 (1461): push 641
0x05BB (1467): xor
0x05BC (1468): sub
0x05BD (1469): push 90
0x05C3 (1475): push 99
0x05C9 (1481): xor
0x05CA (1482): rvstk 2
0x05CC (1484): sub
0x05CD (1485): rvstk 3
0x05CF (1487): rvstk 2
0x05D1 (1489): rvstk 3
0x05D3 (1491): mul
0x05D4 (1492): add
0x05D5 (1493): spc
0x05D6 (1494): push 1
0x05DC (1500): lnt
0x05DD (1501): ret

0x05DE (1502): ld 2, 5 // push(variables[2][5])
0x05E1 (1505): push 1
0x05E7 (1511): ld 2, 5 // push(variables[2][5])
0x05EA (1514): add
0x05EB (1515): st 2, 5 // variables[2][5] = pop()
0x05EE (1518): pop
0x05EF (1519): pushcp 1262
0x05F3 (1523): thrs
0x05F4 (1524): push null
0x05F6 (1526): ld 1, 2 // push(variables[1][2])
0x05F9 (1529): ld 2, 8 // push(variables[2][8])
0x05FC (1532): call 1
0x05FE (1534): clrstk
0x05FF (1535): push 0
0x0605 (1541): push 7
0x060B (1547): push 3631
0x0611 (1553): push 850
0x0617 (1559): xor
0x0618 (1560): spc

0x0619 (1561): incstk 0
0x061B (1563): decstk 0
0x061D (1565): rvstk 0
0x061F (1567): push 11
0x0625 (1573): ld 1, 6 // push(variables[1][6])
0x0628 (1576): rvstk 2
0x062A (1578): mul
0x062B (1579): push 17
0x0631 (1585): rvstk 2
0x0633 (1587): pushcp 14
0x0637 (1591): thrs
0x0638 (1592): decstk 0
0x063A (1594): rvstk 0
0x063C (1596): push 1337
0x0642 (1602): push 0
0x0648 (1608): push 2
0x064E (1614): pshvar
0x064F (1615): subscr
0x0650 (1616): asnarr
0x0651 (1617): push "Function"
0x065D (1629): pushcp 340
0x0661 (1633): thr
0x0662 (1634): subscr
0x0663 (1635): subscr
0x0664 (1636): push 256
0x066A (1642): rvstk 2
0x066C (1644): sub
0x066D (1645): push 0
0x0673 (1651): gt
0x0674 (1652): lpc
0x0675 (1653): cpy
0x0676 (1654): push 190
0x067C (1660): push 135
0x0682 (1666): xor
0x0683 (1667): add
0x0684 (1668): rvstk 2
0x0686 (1670): push 5399
0x068C (1676): push 536
0x0692 (1682): xor
0x0693 (1683): sub
0x0694 (1684): push 172
0x069A (1690): push 149
0x06A0 (1696): xor
0x06A1 (1697): rvstk 2
0x06A3 (1699): sub
0x06A4 (1700): rvstk 3
0x06A6 (1702): rvstk 2
0x06A8 (1704): rvstk 3
0x06AA (1706): mul
0x06AB (1707): add
0x06AC (1708): spc
0x06AD (1709): push 0
0x06B3 (1715): st 2, 7 // variables[2][7] = pop()
0x06B6 (1718): clrstk
0x06B7 (1719): ld 2, 7 // push(variables[2][7])
0x06BA (1722): push 3
0x06C0 (1728): push 4611
0x06C6 (1734): push 758
0x06CC (1740): xor
0x06CD (1741): spc

0x06CE (1742): st 2, 7 // variables[2][7] = pop()
0x06D1 (1745): pop
0x06D2 (1746): ld 2, 7 // push(variables[2][7])
0x06D5 (1749): push 3
0x06DB (1755): rvstk 2
0x06DD (1757): sub
0x06DE (1758): push 0
0x06E4 (1764): gt
0x06E5 (1765): lpc
0x06E6 (1766): cpy
0x06E7 (1767): push 17
0x06ED (1773): push 40
0x06F3 (1779): xor
0x06F4 (1780): add
0x06F5 (1781): rvstk 2
0x06F7 (1783): push 4916
0x06FD (1789): push 518
0x0703 (1795): xor
0x0704 (1796): sub
0x0705 (1797): push 81
0x070B (1803): push 104
0x0711 (1809): xor
0x0712 (1810): rvstk 2
0x0714 (1812): sub
0x0715 (1813): rvstk 3
0x0717 (1815): rvstk 2
0x0719 (1817): rvstk 3
0x071B (1819): mul
0x071C (1820): add
0x071D (1821): spc
0x071E (1822): push 4254
0x0724 (1828): push 1170
0x072A (1834): xor
0x072B (1835): spc

0x072C (1836): pop
0x072D (1837): rvstk 2
0x072F (1839): mod
0x0730 (1840): rvstk 2
0x0732 (1842): xor
0x0733 (1843): cpy
0x0734 (1844): ld 2, 7 // push(variables[2][7])
0x0737 (1847): ld 2, 8 // push(variables[2][8])
0x073A (1850): asnarr
0x073B (1851): clrstk
0x073C (1852): push 4752
0x0742 (1858): push 503
0x0748 (1864): xor
0x0749 (1865): spc

0x074A (1866): push 2
0x0750 (1872): push 2
0x0756 (1878): pshvar
0x0757 (1879): subscr
0x0758 (1880): subscr
0x0759 (1881): push 8
0x075F (1887): rvstk 2
0x0761 (1889): mul
0x0762 (1890): push 626
0x0768 (1896): push 121
0x076E (1902): xor
0x076F (1903): spc

0x0770 (1904): lpc
0x0771 (1905): cpy
0x0772 (1906): push 100
0x0778 (1912): push 93
0x077E (1918): xor
0x077F (1919): add
0x0780 (1920): rvstk 2
0x0782 (1922): push 1365
0x0788 (1928): push 1208
0x078E (1934): xor
0x078F (1935): sub
0x0790 (1936): push 64
0x0796 (1942): push 121
0x079C (1948): xor
0x079D (1949): rvstk 2
0x079F (1951): sub
0x07A0 (1952): rvstk 3
0x07A2 (1954): rvstk 2
0x07A4 (1956): rvstk 3
0x07A6 (1958): mul
0x07A7 (1959): add
0x07A8 (1960): spc
0x07A9 (1961): ld 2, 0 // push(variables[2][0])
0x07AC (1964): push 2
0x07B2 (1970): push 2
0x07B8 (1976): pshvar
0x07B9 (1977): subscr
0x07BA (1978): subscr
0x07BB (1979): rvstk 2
0x07BD (1981): subscr
0x07BE (1982): ld 2, 3 // push(variables[2][3])
0x07C1 (1985): pushcp 5082
0x07C5 (1989): thrs
0x07C6 (1990): subscr
0x07C7 (1991): subscr
0x07C8 (1992): push 8
0x07CE (1998): rvstk 2
0x07D0 (2000): st
0x07D1 (2001): lpc
0x07D2 (2002): cpy
0x07D3 (2003): push 60
0x07D9 (2009): push 5
0x07DF (2015): xor
0x07E0 (2016): add
0x07E1 (2017): rvstk 2
0x07E3 (2019): push 6010
0x07E9 (2025): push 226
0x07EF (2031): xor
0x07F0 (2032): sub
0x07F1 (2033): push 16
0x07F7 (2039): push 41
0x07FD (2045): xor
0x07FE (2046): rvstk 2
0x0800 (2048): sub
0x0801 (2049): rvstk 3
0x0803 (2051): rvstk 2
0x0805 (2053): rvstk 3
0x0807 (2055): mul
0x0808 (2056): add
0x0809 (2057): spc
0x080A (2058): push 3465
0x0810 (2064): push 1219
0x0816 (2070): xor
0x0817 (2071): spc

0x0818 (2072): add
0x0819 (2073): push 7
0x081F (2079): rvstk 2
0x0821 (2081): mul
0x0822 (2082): push 1024
0x0828 (2088): rvstk 2
0x082A (2090): push 2377
0x0830 (2096): push 840
0x0836 (2102): xor
0x0837 (2103): spc

0x0838 (2104): ld 2, 0 // push(variables[2][0])
0x083B (2107): ld 2, 2 // push(variables[2][2])
0x083E (2110): rvstk 2
0x0840 (2112): subscr
0x0841 (2113): cpy
0x0842 (2114): push 1
0x0848 (2120): push 2
0x084E (2126): pshvar
0x084F (2127): subscr
0x0850 (2128): subscr
0x0851 (2129): ld 2, 0 // push(variables[2][0])
0x0854 (2132): asnarr
0x0855 (2133): clrstk
0x0856 (2134): push 3
0x085C (2140): push 2772
0x0862 (2146): push 1022
0x0868 (2152): xor
0x0869 (2153): spc

0x086A (2154): incstk 1
0x086C (2156): decstk 1
0x086E (2158): rvstk 1
0x0870 (2160): st 2, 0 // variables[2][0] = pop()
0x0873 (2163): crtarr 0
0x0876 (2166): push 1
0x087C (2172): push 2
0x0882 (2178): pshvar
0x0883 (2179): subscr
0x0884 (2180): asnarr
0x0885 (2181): push 0
0x088B (2187): pushcp 4682
0x088F (2191): thrs
0x0890 (2192): push 1
0x0896 (2198): pshvar
0x0897 (2199): subscr
0x0898 (2200): subscr
0x0899 (2201): call 0
0x089B (2203): push 6
0x08A1 (2209): push 1
0x08A7 (2215): lpc
0x08A8 (2216): cpy
0x08A9 (2217): push 61
0x08AF (2223): push 4
0x08B5 (2229): xor
0x08B6 (2230): add
0x08B7 (2231): rvstk 2
0x08B9 (2233): push 1475
0x08BF (2239): push 1698
0x08C5 (2245): xor
0x08C6 (2246): sub
0x08C7 (2247): push 130
0x08CD (2253): push 187
0x08D3 (2259): xor
0x08D4 (2260): rvstk 2
0x08D6 (2262): sub
0x08D7 (2263): rvstk 3
0x08D9 (2265): rvstk 2
0x08DB (2267): rvstk 3
0x08DD (2269): mul
0x08DE (2270): add
0x08DF (2271): spc
0x08E0 (2272): push 24
0x08E6 (2278): rvstk 2
0x08E8 (2280): st
0x08E9 (2281): lpc
0x08EA (2282): cpy
0x08EB (2283): push 156
0x08F1 (2289): push 165
0x08F7 (2295): xor
0x08F8 (2296): add
0x08F9 (2297): rvstk 2
0x08FB (2299): push 4188
0x0901 (2305): push 764
0x0907 (2311): xor
0x0908 (2312): sub
0x0909 (2313): push 58
0x090F (2319): push 3
0x0915 (2325): xor
0x0916 (2326): rvstk 2
0x0918 (2328): sub
0x0919 (2329): rvstk 3
0x091B (2331): rvstk 2
0x091D (2333): rvstk 3
0x091F (2335): mul
0x0920 (2336): add
0x0921 (2337): spc
0x0922 (2338): ld 2, 1 // push(variables[2][1])
0x0925 (2341): pushcp 5109
0x0929 (2345): thrs
0x092A (2346): push 2
0x0930 (2352): pshvar
0x0931 (2353): subscr
0x0932 (2354): subscr
0x0933 (2355): cpy
0x0934 (2356): ld 2, 2 // push(variables[2][2])
0x0937 (2359): ld 2, 0 // push(variables[2][0])
0x093A (2362): asnarr
0x093B (2363): clrstk
0x093C (2364): push 5262
0x0942 (2370): push 1094
0x0948 (2376): xor
0x0949 (2377): spc

0x094A (2378): ld 2, 2 // push(variables[2][2])
0x094D (2381): push 1
0x0953 (2387): ld 2, 2 // push(variables[2][2])
0x0956 (2390): add
0x0957 (2391): st 2, 2 // variables[2][2] = pop()
0x095A (2394): pop
0x095B (2395): ld 2, 2 // push(variables[2][2])
0x095E (2398): push 1
0x0964 (2404): lpc
0x0965 (2405): cpy
0x0966 (2406): push 106
0x096C (2412): push 83
0x0972 (2418): xor
0x0973 (2419): add
0x0974 (2420): rvstk 2
0x0976 (2422): push 3698
0x097C (2428): push 1682
0x0982 (2434): xor
0x0983 (2435): sub
0x0984 (2436): push 175
0x098A (2442): push 150
0x0990 (2448): xor
0x0991 (2449): rvstk 2
0x0993 (2451): sub
0x0994 (2452): rvstk 3
0x0996 (2454): rvstk 2
0x0998 (2456): rvstk 3
0x099A (2458): mul
0x099B (2459): add
0x099C (2460): spc
0x099D (2461): st 2, 2 // variables[2][2] = pop()
0x09A0 (2464): push 0
0x09A6 (2470): push 2
0x09AC (2476): pshvar
0x09AD (2477): subscr
0x09AE (2478): subscr
0x09AF (2479): pushcp 5175
0x09B3 (2483): thr
0x09B4 (2484): cpy
0x09B5 (2485): push "apply"
0x09BE (2494): rvstk 2
0x09C0 (2496): subscr
0x09C1 (2497): pshint
0x09C2 (2498): crtarr 0
0x09C5 (2501): rvstk 2
0x09C7 (2503): call 2
0x09C9 (2505): push 2
0x09CF (2511): pushcp 3803
0x09D3 (2515): thrs
0x09D4 (2516): pop
0x09D5 (2517): push "submit"
0x09DF (2527): push "window"
0x09E9 (2537): pshwnd
0x09EA (2538): subscr
0x09EB (2539): asnarr
0x09EC (2540): clrstk
0x09ED (2541): push null
0x09EF (2543): ret


0x09F0 (2544): call 0
0x09F2 (2546): clrstk
0x09F3 (2547): push 7985
0x09F9 (2553): push 1832
0x09FF (2559): xor
0x0A00 (2560): spc

0x0A01 (2561): mod
0x0A02 (2562): cpy
0x0A03 (2563): st 2, 4 // variables[2][4] = pop()
0x0A06 (2566): clrstk
0x0A07 (2567): push 5
0x0A0D (2573): push 2
0x0A13 (2579): pshvar
0x0A14 (2580): subscr
0x0A15 (2581): subscr
0x0A16 (2582): push 1
0x0A1C (2588): ld 2, 5 // push(variables[2][5])
0x0A1F (2591): push 1
0x0A25 (2597): lpc
0x0A26 (2598): cpy
0x0A27 (2599): push 78
0x0A2D (2605): push 119
0x0A33 (2611): xor
0x0A34 (2612): add
0x0A35 (2613): rvstk 2
0x0A37 (2615): push 5626
0x0A3D (2621): push 358
0x0A43 (2627): xor
0x0A44 (2628): sub
0x0A45 (2629): push 30
0x0A4B (2635): push 39
0x0A51 (2641): xor
0x0A52 (2642): rvstk 2
0x0A54 (2644): sub
0x0A55 (2645): rvstk 3
0x0A57 (2647): rvstk 2
0x0A59 (2649): rvstk 3
0x0A5B (2651): mul
0x0A5C (2652): add
0x0A5D (2653): spc
0x0A5E (2654): push 24
0x0A64 (2660): rvstk 2
0x0A66 (2662): mul
0x0A67 (2663): rvstk 2
0x0A69 (2665): sub
0x0A6A (2666): push 0
0x0A70 (2672): rvstk 2
0x0A72 (2674): st
0x0A73 (2675): lpc
0x0A74 (2676): cpy
0x0A75 (2677): push 72
0x0A7B (2683): push 113
0x0A81 (2689): xor
0x0A82 (2690): add
0x0A83 (2691): rvstk 2
0x0A85 (2693): push 3787
0x0A8B (2699): push 66
0x0A91 (2705): xor
0x0A92 (2706): sub
0x0A93 (2707): push 123
0x0A99 (2713): push 66
0x0A9F (2719): xor
0x0AA0 (2720): rvstk 2
0x0AA2 (2722): sub
0x0AA3 (2723): rvstk 3
0x0AA5 (2725): rvstk 2
0x0AA7 (2727): rvstk 3
0x0AA9 (2729): mul
0x0AAA (2730): add
0x0AAB (2731): spc
0x0AAC (2732): push 5
0x0AB2 (2738): push 2
0x0AB8 (2744): pshvar
0x0AB9 (2745): pushcp 618
0x0ABD (2749): thr
0x0ABE (2750): subscr
0x0ABF (2751): asnarr
0x0AC0 (2752): push 0
0x0AC6 (2758): st 2, 4 // variables[2][4] = pop()
0x0AC9 (2761): push 0
0x0ACF (2767): st 2, 5 // variables[2][5] = pop()
0x0AD2 (2770): clrstk
0x0AD3 (2771): ld 2, 5 // push(variables[2][5])
0x0AD6 (2774): push 48
0x0ADC (2780): rvstk 2
0x0ADE (2782): pushcp 100
0x0AE2 (2786): thrs
0x0AE3 (2787): push 1
0x0AE9 (2793): push 2
0x0AEF (2799): pshvar
0x0AF0 (2800): subscr
0x0AF1 (2801): subscr
0x0AF2 (2802): asnarr
0x0AF3 (2803): clrstk
0x0AF4 (2804): ld 2, 3 // push(variables[2][3])
0x0AF7 (2807): push 4762
0x0AFD (2813): push 2004
0x0B03 (2819): xor
0x0B04 (2820): spc

0x0B05 (2821): push 6
0x0B0B (2827): push 2
0x0B11 (2833): pshvar
0x0B12 (2834): subscr
0x0B13 (2835): subscr
0x0B14 (2836): call 1
0x0B16 (2838): clrstk
0x0B17 (2839): ld 2, 7 // push(variables[2][7])
0x0B1A (2842): push 1
0x0B20 (2848): push 7
0x0B26 (2854): push 653
0x0B2C (2860): push 67
0x0B32 (2866): xor
0x0B33 (2867): spc

0x0B34 (2868): push 1
0x0B3A (2874): pshvar
0x0B3B (2875): subscr
0x0B3C (2876): asnarr
0x0B3D (2877): clrstk
0x0B3E (2878): push 0
0x0B44 (2884): st 2, 5 // variables[2][5] = pop()
0x0B47 (2887): push 481
0x0B4D (2893): push 604
0x0B53 (2899): xor
0x0B54 (2900): spc

0x0B55 (2901): ld 2, 3 // push(variables[2][3])
0x0B58 (2904): add
0x0B59 (2905): push 3
0x0B5F (2911): push 2
0x0B65 (2917): pshvar
0x0B66 (2918): subscr
0x0B67 (2919): asnarr
0x0B68 (2920): pop
0x0B69 (2921): ld 2, 3 // push(variables[2][3])
0x0B6C (2924): ld 2, 2 // push(variables[2][2])
0x0B6F (2927): push "length"
0x0B79 (2937): rvstk 2
0x0B7B (2939): subscr
0x0B7C (2940): push 1
0x0B82 (2946): lpc
0x0B83 (2947): cpy
0x0B84 (2948): push 16
0x0B8A (2954): push 41
0x0B90 (2960): xor
0x0B91 (2961): add
0x0B92 (2962): rvstk 2
0x0B94 (2964): push 7664
0x0B9A (2970): push 2073
0x0BA0 (2976): xor
0x0BA1 (2977): sub
0x0BA2 (2978): push 116
0x0BA8 (2984): push 77
0x0BAE (2990): xor
0x0BAF (2991): rvstk 2
0x0BB1 (2993): sub
0x0BB2 (2994): rvstk 3
0x0BB4 (2996): rvstk 2
0x0BB6 (2998): rvstk 3
0x0BB8 (3000): mul
0x0BB9 (3001): add
0x0BBA (3002): spc

0x0BBB (3003): push null
0x0BBD (3005): def 2544 // function start below

0x0BC1 (3009): incstk 0
0x0BC3 (3011): decstk 0
0x0BC5 (3013): rvstk 0
0x0BC7 (3015): def 5683 // function start below

0x0BCB (3019): incstk 0
0x0BCD (3021): push 1175
0x0BD3 (3027): push 687
0x0BD9 (3033): xor
0x0BDA (3034): spc

0x0BDB (3035): subscr
0x0BDC (3036): ld 2, 3 // push(variables[2][3])
0x0BDF (3039): call 1
0x0BE1 (3041): rvstk 2
0x0BE3 (3043): add
0x0BE4 (3044): push 2
0x0BEA (3050): push 32
0x0BF0 (3056): rvstk 2
0x0BF2 (3058): sq
0x0BF3 (3059): rvstk 2
0x0BF5 (3061): mod
0x0BF6 (3062): push 4282
0x0BFC (3068): push 823
0x0C02 (3074): xor
0x0C03 (3075): spc

0x0C04 (3076): pop
0x0C05 (3077): ld 2, 7 // push(variables[2][7])
0x0C08 (3080): rvstk 2
0x0C0A (3082): subscr
0x0C0B (3083): ld 2, 7 // push(variables[2][7])
0x0C0E (3086): push 2
0x0C14 (3092): pushcp 1836
0x0C18 (3096): thr
0x0C19 (3097): asnarr

0x0C1A (3098): def 1148 // function start below

0x0C1E (3102): incstk 1
0x0C20 (3104): decstk 1
0x0C22 (3106): rvstk 1
0x0C24 (3108): st 2, 0 // variables[2][0] = pop()
0x0C27 (3111): push 0
0x0C2D (3117): push 1
0x0C33 (3123): push 2
0x0C39 (3129): pshvar
0x0C3A (3130): subscr
0x0C3B (3131): asnarr
0x0C3C (3132): clrstk
0x0C3D (3133): ld 2, 1 // push(variables[2][1])
0x0C40 (3136): pushcp 3362
0x0C44 (3140): thrs
0x0C45 (3141): pop
0x0C46 (3142): push 2
0x0C4C (3148): push 2
0x0C52 (3154): pshvar
0x0C53 (3155): subscr
0x0C54 (3156): subscr
0x0C55 (3157): push 24
0x0C5B (3163): rvstk 2
0x0C5D (3165): st
0x0C5E (3166): lpc
0x0C5F (3167): cpy
0x0C60 (3168): push 15
0x0C66 (3174): push 54
0x0C6C (3180): xor
0x0C6D (3181): add
0x0C6E (3182): rvstk 2
0x0C70 (3184): push 3160
0x0C76 (3190): push 606
0x0C7C (3196): xor
0x0C7D (3197): sub
0x0C7E (3198): push 7
0x0C84 (3204): push 62
0x0C8A (3210): xor
0x0C8B (3211): rvstk 2
0x0C8D (3213): sub
0x0C8E (3214): rvstk 3
0x0C90 (3216): rvstk 2
0x0C92 (3218): rvstk 3
0x0C94 (3220): mul
0x0C95 (3221): add
0x0C96 (3222): spc
0x0C97 (3223): push 1
0x0C9D (3229): push 2
0x0CA3 (3235): pshvar
0x0CA4 (3236): push 573
0x0CAA (3242): push 219
0x0CB0 (3248): xor
0x0CB1 (3249): spc

0x0CB2 (3250): push "split"
0x0CBB (3259): rvstk 2
0x0CBD (3261): subscr
0x0CBE (3262): push ""
0x0CC2 (3266): call 1
0x0CC4 (3268): push 224
0x0CCA (3274): push 459
0x0CD0 (3280): xor
0x0CD1 (3281): spc

0x0CD2 (3282): pshvar
0x0CD3 (3283): subscr
0x0CD4 (3284): subscr
0x0CD5 (3285): call 1
0x0CD7 (3287): st 2, 8 // variables[2][8] = pop()
0x0CDA (3290): ld 1, 6 // push(variables[1][6])
0x0CDD (3293): ld 2, 4 // push(variables[2][4])
0x0CE0 (3296): rvstk 2
0x0CE2 (3298): add
0x0CE3 (3299): cpy
0x0CE4 (3300): push 6
0x0CEA (3306): push 1
0x0CF0 (3312): push 2936
0x0CF6 (3318): push 1486
0x0CFC (3324): xor
0x0CFD (3325): spc

0x0CFE (3326): clrstk
0x0CFF (3327): ld 1, 6 // push(variables[1][6])
0x0D02 (3330): ret

0x0D03 (3331): push null
0x0D05 (3333): ret


0x0D06 (3334): push 1
0x0D0C (3340): push 1
0x0D12 (3346): pshvar
0x0D13 (3347): subscr
0x0D14 (3348): push 2182
0x0D1A (3354): push 1183
0x0D20 (3360): xor
0x0D21 (3361): spc

0x0D22 (3362): ld 2, 0 // push(variables[2][0])
0x0D25 (3365): push "length"
0x0D2F (3375): rvstk 2
0x0D31 (3377): subscr
0x0D32 (3378): rvstk 2
0x0D34 (3380): st
0x0D35 (3381): lnt
0x0D36 (3382): lpc
0x0D37 (3383): cpy
0x0D38 (3384): push 58
0x0D3E (3390): push 3
0x0D44 (3396): xor
0x0D45 (3397): add
0x0D46 (3398): rvstk 2
0x0D48 (3400): push 3486
0x0D4E (3406): push 2535
0x0D54 (3412): xor
0x0D55 (3413): sub
0x0D56 (3414): push 80
0x0D5C (3420): push 105
0x0D62 (3426): xor
0x0D63 (3427): rvstk 2
0x0D65 (3429): sub
0x0D66 (3430): rvstk 3
0x0D68 (3432): rvstk 2
0x0D6A (3434): rvstk 3
0x0D6C (3436): mul
0x0D6D (3437): add
0x0D6E (3438): spc
0x0D6F (3439): push 5080
0x0D75 (3445): push 1403
0x0D7B (3451): xor
0x0D7C (3452): spc

0x0D7D (3453): push 2
0x0D83 (3459): pshvar
0x0D84 (3460): subscr
0x0D85 (3461): asnarr
0x0D86 (3462): clrstk
0x0D87 (3463): ld 2, 7 // push(variables[2][7])
0x0D8A (3466): push 4
0x0D90 (3472): push 24
0x0D96 (3478): rvstk 2
0x0D98 (3480): push 2277
0x0D9E (3486): push 1710
0x0DA4 (3492): xor
0x0DA5 (3493): spc

0x0DA6 (3494): subscr
0x0DA7 (3495): asnarr
0x0DA8 (3496): pop
0x0DA9 (3497): ld 2, 3 // push(variables[2][3])
0x0DAC (3500): push 8
0x0DB2 (3506): push 811
0x0DB8 (3512): push 643
0x0DBE (3518): xor
0x0DBF (3519): spc

0x0DC0 (3520): ld 2, 2 // push(variables[2][2])
0x0DC3 (3523): push 24
0x0DC9 (3529): rvstk 2
0x0DCB (3531): st
0x0DCC (3532): lnt
0x0DCD (3533): lpc
0x0DCE (3534): cpy
0x0DCF (3535): push 147
0x0DD5 (3541): push 170
0x0DDB (3547): xor
0x0DDC (3548): add
0x0DDD (3549): rvstk 2
0x0DDF (3551): push 4021
0x0DE5 (3557): push 802
0x0DEB (3563): xor
0x0DEC (3564): sub
0x0DED (3565): push 68
0x0DF3 (3571): push 125
0x0DF9 (3577): xor
0x0DFA (3578): rvstk 2
0x0DFC (3580): sub
0x0DFD (3581): rvstk 3
0x0DFF (3583): rvstk 2
0x0E01 (3585): rvstk 3
0x0E03 (3587): mul
0x0E04 (3588): add
0x0E05 (3589): spc
0x0E06 (3590): push 0
0x0E0C (3596): push 1
0x0E12 (3602): lpc
0x0E13 (3603): cpy
0x0E14 (3604): push 179
0x0E1A (3610): push 138
0x0E20 (3616): xor
0x0E21 (3617): add
0x0E22 (3618): rvstk 2
0x0E24 (3620): push 3389
0x0E2A (3626): push 2092
0x0E30 (3632): xor
0x0E31 (3633): sub
0x0E32 (3634): push 171
0x0E38 (3640): push 146
0x0E3E (3646): xor
0x0E3F (3647): rvstk 2
0x0E41 (3649): sub
0x0E42 (3650): rvstk 3
0x0E44 (3652): rvstk 2
0x0E46 (3654): rvstk 3
0x0E48 (3656): mul
0x0E49 (3657): add
0x0E4A (3658): spc
0x0E4B (3659): mul
0x0E4C (3660): rvstk 2
0x0E4E (3662): st
0x0E4F (3663): lnt
0x0E50 (3664): lpc
0x0E51 (3665): cpy
0x0E52 (3666): push 191
0x0E58 (3672): push 134
0x0E5E (3678): xor
0x0E5F (3679): add
0x0E60 (3680): rvstk 2
0x0E62 (3682): push 2088
0x0E68 (3688): push 644
0x0E6E (3694): xor
0x0E6F (3695): sub
0x0E70 (3696): push 76
0x0E76 (3702): push 117
0x0E7C (3708): xor
0x0E7D (3709): rvstk 2
0x0E7F (3711): sub
0x0E80 (3712): rvstk 3
0x0E82 (3714): rvstk 2
0x0E84 (3716): rvstk 3
0x0E86 (3718): mul
0x0E87 (3719): add
0x0E88 (3720): spc
0x0E89 (3721): ld 2, 8 // push(variables[2][8])
0x0E8C (3724): pushcp 3076
0x0E90 (3728): thr
0x0E91 (3729): subscr
0x0E92 (3730): push "length"
0x0E9C (3740): rvstk 2
0x0E9E (3742): subscr
0x0E9F (3743): rvstk 2
0x0EA1 (3745): mod
0x0EA2 (3746): st 2, 2 // variables[2][2] = pop()
0x0EA5 (3749): ld 2, 0 // push(variables[2][0])
0x0EA8 (3752): ld 2, 1 // push(variables[2][1])
0x0EAB (3755): rvstk 2
0x0EAD (3757): subscr
0x0EAE (3758): st 2, 3 // variables[2][3] = pop()
0x0EB1 (3761): pushcp 2104
0x0EB5 (3765): thrs
0x0EB6 (3766): pshvar
0x0EB7 (3767): subscr
0x0EB8 (3768): asnarr
0x0EB9 (3769): clrstk
0x0EBA (3770): push 0
0x0EC0 (3776): push 5
0x0EC6 (3782): push 2
0x0ECC (3788): pshvar
0x0ECD (3789): push 6912
0x0ED3 (3795): push 2917
0x0ED9 (3801): xor
0x0EDA (3802): spc

0x0EDB (3803): push 2
0x0EE1 (3809): pshvar
0x0EE2 (3810): subscr
0x0EE3 (3811): asnarr
0x0EE4 (3812): push 0
0x0EEA (3818): push 3
0x0EF0 (3824): push 2
0x0EF6 (3830): pshvar
0x0EF7 (3831): subscr
0x0EF8 (3832): asnarr
0x0EF9 (3833): clrstk
0x0EFA (3834): push 1
0x0F00 (3840): lpc
0x0F01 (3841): cpy
0x0F02 (3842): push 74
0x0F08 (3848): push 115
0x0F0E (3854): xor
0x0F0F (3855): add
0x0F10 (3856): rvstk 2
0x0F12 (3858): push 1562
0x0F18 (3864): push 670
0x0F1E (3870): xor
0x0F1F (3871): sub
0x0F20 (3872): push 79
0x0F26 (3878): push 118
0x0F2C (3884): xor
0x0F2D (3885): rvstk 2
0x0F2F (3887): sub
0x0F30 (3888): rvstk 3
0x0F32 (3890): rvstk 2
0x0F34 (3892): rvstk 3
0x0F36 (3894): mul
0x0F37 (3895): add
0x0F38 (3896): spc
0x0F39 (3897): cpy
0x0F3A (3898): push "charCodeAt"
0x0F48 (3912): rvstk 2
0x0F4A (3914): subscr
0x0F4B (3915): call 0
0x0F4D (3917): ret

0x0F4E (3918): push null
0x0F50 (3920): ret

0x0F51 (3921): call 1
0x0F53 (3923): push 3
0x0F59 (3929): push 2
0x0F5F (3935): pshvar
0x0F60 (3936): push 425
0x0F66 (3942): push 2839
0x0F6C (3948): xor
0x0F6D (3949): spc

0x0F6E (3950): subscr
0x0F6F (3951): push 1
0x0F75 (3957): push 5
0x0F7B (3963): push 2
0x0F81 (3969): pshvar
0x0F82 (3970): subscr
0x0F83 (3971): subscr
0x0F84 (3972): add
0x0F85 (3973): st 2, 5 // variables[2][5] = pop()
0x0F88 (3976): pop
0x0F89 (3977): push 5
0x0F8F (3983): push 2
0x0F95 (3989): pshvar
0x0F96 (3990): push 409
0x0F9C (3996): push 2043
0x0FA2 (4002): xor
0x0FA3 (4003): spc

0x0FA4 (4004): subscr
0x0FA5 (4005): ld 2, 3 // push(variables[2][3])
0x0FA8 (4008): push 5
0x0FAE (4014): push 2
0x0FB4 (4020): pshvar
0x0FB5 (4021): subscr
0x0FB6 (4022): subscr
0x0FB7 (4023): rvstk 2
0x0FB9 (4025): subscr
0x0FBA (4026): rvstk 2
0x0FBC (4028): subscr
0x0FBD (4029): push 1
0x0FC3 (4035): lpc
0x0FC4 (4036): cpy
0x0FC5 (4037): push 186
0x0FCB (4043): push 131
0x0FD1 (4049): xor
0x0FD2 (4050): add
0x0FD3 (4051): rvstk 2
0x0FD5 (4053): push 5125
0x0FDB (4059): push 471
0x0FE1 (4065): xor
0x0FE2 (4066): sub
0x0FE3 (4067): push 125
0x0FE9 (4073): push 68
0x0FEF (4079): xor
0x0FF0 (4080): rvstk 2
0x0FF2 (4082): sub
0x0FF3 (4083): rvstk 3
0x0FF5 (4085): rvstk 2
0x0FF7 (4087): rvstk 3
0x0FF9 (4089): mul
0x0FFA (4090): add
0x0FFB (4091): spc
0x0FFC (4092): pop

0x0FFD (4093): def 748 // function start below

0x1001 (4097): incstk 1
0x1003 (4099): decstk 1
0x1005 (4101): rvstk 1
0x1007 (4103): st 2, 0 // variables[2][0] = pop()
0x100A (4106): crtarr 0
0x100D (4109): st 2, 1 // variables[2][1] = pop()
0x1010 (4112): push 0
0x1016 (4118): push 2
0x101C (4124): push 2
0x1022 (4130): pshvar
0x1023 (4131): subscr
0x1024 (4132): asnarr
0x1025 (4133): clrstk
0x1026 (4134): push 1
0x102C (4140): lpc
0x102D (4141): cpy
0x102E (4142): push 176
0x1034 (4148): push 137
0x103A (4154): xor
0x103B (4155): add
0x103C (4156): rvstk 2
0x103E (4158): push 3769
0x1044 (4164): push 889
0x104A (4170): xor
0x104B (4171): sub
0x104C (4172): push 83
0x1052 (4178): push 106
0x1058 (4184): xor
0x1059 (4185): rvstk 2
0x105B (4187): sub
0x105C (4188): rvstk 3
0x105E (4190): rvstk 2
0x1060 (4192): rvstk 3
0x1062 (4194): mul
0x1063 (4195): add
0x1064 (4196): spc
0x1065 (4197): subscr
0x1066 (4198): asnarr
0x1067 (4199): clrstk
0x1068 (4200): push 5
0x106E (4206): push 2
0x1074 (4212): pshvar
0x1075 (4213): push 7630
0x107B (4219): push 2250
0x1081 (4225): xor
0x1082 (4226): spc

0x1083 (4227): pshvar
0x1084 (4228): subscr
0x1085 (4229): subscr
0x1086 (4230): push 8
0x108C (4236): push 2
0x1092 (4242): pshvar
0x1093 (4243): subscr
0x1094 (4244): subscr
0x1095 (4245): call 1
0x1097 (4247): cpy
0x1098 (4248): push 5271
0x109E (4254): push 528
0x10A4 (4260): xor
0x10A5 (4261): spc

0x10A6 (4262): push 3
0x10AC (4268): rvstk 2
0x10AE (4270): mul
0x10AF (4271): ld 2, 2 // push(variables[2][2])
0x10B2 (4274): cpy
0x10B3 (4275): push "charCodeAt"
0x10C1 (4289): rvstk 2
0x10C3 (4291): pushcp 3035
0x10C7 (4295): thrs
0x10C8 (4296): push 1
0x10CE (4302): push 2
0x10D4 (4308): pshvar
0x10D5 (4309): subscr
0x10D6 (4310): subscr
0x10D7 (4311): push 1
0x10DD (4317): push 1
0x10E3 (4323): push 2
0x10E9 (4329): pshvar
0x10EA (4330): subscr
0x10EB (4331): subscr
0x10EC (4332): add
0x10ED (4333): st 2, 1 // variables[2][1] = pop()
0x10F0 (4336): pushcp 883
0x10F4 (4340): thrs
0x10F5 (4341): rvstk 2
0x10F7 (4343): st
0x10F8 (4344): lnt
0x10F9 (4345): lpc
0x10FA (4346): cpy
0x10FB (4347): push 181
0x1101 (4353): push 140
0x1107 (4359): xor
0x1108 (4360): add
0x1109 (4361): rvstk 2
0x110B (4363): push 1151
0x1111 (4369): push 865
0x1117 (4375): xor
0x1118 (4376): sub
0x1119 (4377): push 135
0x111F (4383): push 190
0x1125 (4389): xor
0x1126 (4390): rvstk 2
0x1128 (4392): sub
0x1129 (4393): rvstk 3
0x112B (4395): rvstk 2
0x112D (4397): rvstk 3
0x112F (4399): mul
0x1130 (4400): add
0x1131 (4401): spc
0x1132 (4402): push 0
0x1138 (4408): push 5
0x113E (4414): push 2
0x1144 (4420): pshvar
0x1145 (4421): subscr
0x1146 (4422): asnarr
0x1147 (4423): clrstk
0x1148 (4424): push 7718
0x114E (4430): push 3361
0x1154 (4436): xor
0x1155 (4437): spc

0x1156 (4438): rvstk 2
0x1158 (4440): mul
0x1159 (4441): push 3
0x115F (4447): push 2
0x1165 (4453): pshvar
0x1166 (4454): subscr
0x1167 (4455): subscr
0x1168 (4456): rvstk 2
0x116A (4458): push 6095
0x1170 (4464): push 588
0x1176 (4470): xor
0x1177 (4471): spc

0x1178 (4472): cpy
0x1179 (4473): ld 2, 2 // push(variables[2][2])
0x117C (4476): ld 2, 1 // push(variables[2][1])
0x117F (4479): asnarr
0x1180 (4480): clrstk
0x1181 (4481): push 0
0x1187 (4487): st 2, 3 // variables[2][3] = pop()
0x118A (4490): clrstk
0x118B (4491): ld 2, 3 // push(variables[2][3])
0x118E (4494): push 8
0x1194 (4500): rvstk 2
0x1196 (4502): pushcp 5981
0x119A (4506): thrs
0x119B (4507): subscr
0x119C (4508): push 24
0x11A2 (4514): rvstk 2
0x11A4 (4516): sub
0x11A5 (4517): push 0
0x11AB (4523): gt

0x11AC (4524): lpc
0x11AD (4525): cpy
0x11AE (4526): push 17
0x11B4 (4532): push 40
0x11BA (4538): xor
0x11BB (4539): add
0x11BC (4540): rvstk 2
0x11BE (4542): push 6017
0x11C4 (4548): push 1237
0x11CA (4554): xor
0x11CB (4555): sub
0x11CC (4556): push 56
0x11D2 (4562): push 1
0x11D8 (4568): xor
0x11D9 (4569): rvstk 2
0x11DB (4571): sub
0x11DC (4572): rvstk 3
0x11DE (4574): rvstk 2
0x11E0 (4576): rvstk 3
0x11E2 (4578): mul
0x11E3 (4579): add
0x11E4 (4580): spc

0x11E5 (4581): push null
0x11E7 (4583): ld 1, 2 // push(variables[1][2])
0x11EA (4586): push 1
0x11F0 (4592): lpc
0x11F1 (4593): cpy
0x11F2 (4594): push 71
0x11F8 (4600): push 126
0x11FE (4606): xor
0x11FF (4607): add
0x1200 (4608): rvstk 2
0x1202 (4610): push 3057
0x1208 (4616): push 244
0x120E (4622): xor
0x120F (4623): sub
0x1210 (4624): push 60
0x1216 (4630): push 5
0x121C (4636): xor
0x121D (4637): rvstk 2
0x121F (4639): sub
0x1220 (4640): rvstk 3
0x1222 (4642): rvstk 2
0x1224 (4644): rvstk 3
0x1226 (4646): mul
0x1227 (4647): add
0x1228 (4648): spc
0x1229 (4649): subscr
0x122A (4650): subscr
0x122B (4651): ld 2, 5 // push(variables[2][5])
0x122E (4654): push 24
0x1234 (4660): rvstk 2
0x1236 (4662): mod
0x1237 (4663): rvstk 2
0x1239 (4665): subscr
0x123A (4666): rvstk 2
0x123C (4668): push 2663
0x1242 (4674): push 639
0x1248 (4680): xor
0x1249 (4681): spc

0x124A (4682): st 2, 2 // variables[2][2] = pop()
0x124D (4685): clrstk
0x124E (4686): push 2
0x1254 (4692): push 2
0x125A (4698): pshvar
0x125B (4699): subscr
0x125C (4700): subscr
0x125D (4701): push 24
0x1263 (4707): rvstk 2
0x1265 (4709): st
0x1266 (4710): lnt
0x1267 (4711): lpc
0x1268 (4712): cpy
0x1269 (4713): push 191
0x126F (4719): push 134
0x1275 (4725): xor
0x1276 (4726): add
0x1277 (4727): rvstk 2
0x1279 (4729): push 576
0x127F (4735): push 2914
0x1285 (4741): xor
0x1286 (4742): sub
0x1287 (4743): push 150
0x128D (4749): push 175
0x1293 (4755): xor
0x1294 (4756): rvstk 2
0x1296 (4758): sub
0x1297 (4759): rvstk 3
0x1299 (4761): rvstk 2
0x129B (4763): rvstk 3
0x129D (4765): mul
0x129E (4766): add
0x129F (4767): spc
0x12A0 (4768): push 0
0x12A6 (4774): push 1
0x12AC (4780): lpc
0x12AD (4781): cpy
0x12AE (4782): push 32
0x12B4 (4788): push 25
0x12BA (4794): xor
0x12BB (4795): add
0x12BC (4796): rvstk 2
0x12BE (4798): push 4472
0x12C4 (4804): push 0
0x12CA (4810): xor
0x12CB (4811): sub
0x12CC (4812): push 33
0x12D2 (4818): push 24
0x12D8 (4824): xor
0x12D9 (4825): rvstk 2
0x12DB (4827): sub
0x12DC (4828): rvstk 3
0x12DE (4830): rvstk 2
0x12E0 (4832): rvstk 3
0x12E2 (4834): mul
0x12E3 (4835): add
0x12E4 (4836): spc
0x12E5 (4837): subscr
0x12E6 (4838): add
0x12E7 (4839): st 2, 5 // variables[2][5] = pop()
0x12EA (4842): pop
0x12EB (4843): push 5
0x12F1 (4849): push 2
0x12F7 (4855): pshvar
0x12F8 (4856): subscr
0x12F9 (4857): push 6144
0x12FF (4863): push 2459
0x1305 (4869): xor
0x1306 (4870): spc

0x1307 (4871): ld 2, 5 // push(variables[2][5])
0x130A (4874): push 24
0x1310 (4880): rvstk 2
0x1312 (4882): sub
0x1313 (4883): push 0
0x1319 (4889): gt
0x131A (4890): lnt
0x131B (4891): lpc
0x131C (4892): cpy
0x131D (4893): push 186
0x1323 (4899): push 131
0x1329 (4905): xor
0x132A (4906): add
0x132B (4907): rvstk 2
0x132D (4909): push 4358
0x1333 (4915): push 227
0x1339 (4921): xor
0x133A (4922): sub
0x133B (4923): push 15
0x1341 (4929): push 54
0x1347 (4935): xor
0x1348 (4936): rvstk 2
0x134A (4938): sub
0x134B (4939): rvstk 3
0x134D (4941): rvstk 2
0x134F (4943): rvstk 3
0x1351 (4945): mul
0x1352 (4946): add
0x1353 (4947): spc
0x1354 (4948): push 6
0x135A (4954): push 2
0x1360 (4960): pshvar
0x1361 (4961): subscr
0x1362 (4962): pushcp 4004
0x1366 (4966): thrs
0x1367 (4967): ld 2, 7 // push(variables[2][7])
0x136A (4970): push 1
0x1370 (4976): push 7
0x1376 (4982): push 2
0x137C (4988): pshvar
0x137D (4989): subscr
0x137E (4990): subscr
0x137F (4991): push 2253
0x1385 (4997): push 2667
0x138B (5003): xor
0x138C (5004): spc

0x138D (5005): cpy
0x138E (5006): st 2, 0 // variables[2][0] = pop()
0x1391 (5009): clrstk
0x1392 (5010): ld 2, 3 // push(variables[2][3])
0x1395 (5013): push 1
0x139B (5019): push 1
0x13A1 (5025): lpc
0x13A2 (5026): cpy
0x13A3 (5027): push 115
0x13A9 (5033): push 74
0x13AF (5039): xor
0x13B0 (5040): add
0x13B1 (5041): rvstk 2
0x13B3 (5043): push 2325
0x13B9 (5049): push 576
0x13BF (5055): xor
0x13C0 (5056): sub
0x13C1 (5057): push 69
0x13C7 (5063): push 124
0x13CD (5069): xor
0x13CE (5070): rvstk 2
0x13D0 (5072): sub
0x13D1 (5073): rvstk 3
0x13D3 (5075): rvstk 2
0x13D5 (5077): rvstk 3
0x13D7 (5079): mul
0x13D8 (5080): add
0x13D9 (5081): spc
0x13DA (5082): rvstk 2
0x13DC (5084): rs
0x13DD (5085): push 1
0x13E3 (5091): rvstk 2
0x13E5 (5093): and
0x13E6 (5094): cpy
0x13E7 (5095): push 1367
0x13ED (5101): push 541
0x13F3 (5107): xor
0x13F4 (5108): spc

0x13F5 (5109): ret

0x13F6 (5110): push null
0x13F8 (5112): ret

0x13F9 (5113): push 4
0x13FF (5119): push 1
0x1405 (5125): pshvar
0x1406 (5126): subscr
0x1407 (5127): pushcp 1060
0x140B (5131): thrs
0x140C (5132): push null
0x140E (5134): push 3
0x1414 (5140): push 1
0x141A (5146): pshvar
0x141B (5147): subscr
0x141C (5148): subscr
0x141D (5149): push 3
0x1423 (5155): push 2
0x1429 (5161): push 179
0x142F (5167): push 3169
0x1435 (5173): xor
0x1436 (5174): spc

0x1437 (5175): pop
0x1438 (5176): push "length"
0x1442 (5186): rvstk 2
0x1444 (5188): subscr
0x1445 (5189): push 24
0x144B (5195): rvstk 2
0x144D (5197): neq
0x144E (5198): lnt
0x144F (5199): lpc
0x1450 (5200): cpy
0x1451 (5201): push 37
0x1457 (5207): push 28
0x145D (5213): xor
0x145E (5214): add
0x145F (5215): rvstk 2
0x1461 (5217): push 5950
0x1467 (5223): push 372
0x146D (5229): xor
0x146E (5230): sub
0x146F (5231): push 150
0x1475 (5237): push 175
0x147B (5243): xor
0x147C (5244): rvstk 2
0x147E (5246): sub
0x147F (5247): rvstk 3
0x1481 (5249): rvstk 2
0x1483 (5251): rvstk 3
0x1485 (5253): mul
0x1486 (5254): add
0x1487 (5255): spc
0x1488 (5256): push 1
0x148E (5262): push 6592
0x1494 (5268): push 3976
0x149A (5274): xor
0x149B (5275): spc

0x149C (5276): add
0x149D (5277): st 2, 5 // variables[2][5] = pop()
0x14A0 (5280): pop
0x14A1 (5281): ld 2, 5 // push(variables[2][5])
0x14A4 (5284): push 48
0x14AA (5290): rvstk 2
0x14AC (5292): st
0x14AD (5293): lpc
0x14AE (5294): cpy
0x14AF (5295): push 190
0x14B5 (5301): push 135
0x14BB (5307): xor
0x14BC (5308): add
0x14BD (5309): rvstk 2
0x14BF (5311): push 2060
0x14C5 (5317): push 2195
0x14CB (5323): xor
0x14CC (5324): sub
0x14CD (5325): push 157
0x14D3 (5331): push 164
0x14D9 (5337): xor
0x14DA (5338): rvstk 2
0x14DC (5340): sub
0x14DD (5341): rvstk 3
0x14DF (5343): rvstk 2
0x14E1 (5345): rvstk 3
0x14E3 (5347): mul
0x14E4 (5348): add
0x14E5 (5349): spc
0x14E6 (5350): crtarr 0
0x14E9 (5353): st 2, 6 // variables[2][6] = pop()
0x14EC (5356): push 0
0x14F2 (5362): st 2, 5 // variables[2][5] = pop()
0x14F5 (5365): clrstk
0x14F6 (5366): push 5087
0x14FC (5372): push 1302
0x1502 (5378): xor
0x1503 (5379): spc

0x1504 (5380): subscr
0x1505 (5381): subscr
0x1506 (5382): push 3
0x150C (5388): rvstk 2
0x150E (5390): st
0x150F (5391): lnt
0x1510 (5392): lpc
0x1511 (5393): cpy
0x1512 (5394): push 161
0x1518 (5400): push 152
0x151E (5406): xor
0x151F (5407): add
0x1520 (5408): rvstk 2
0x1522 (5410): push 4699
0x1528 (5416): push 1446
0x152E (5422): xor
0x152F (5423): sub
0x1530 (5424): push 88
0x1536 (5430): push 97
0x153C (5436): xor
0x153D (5437): rvstk 2
0x153F (5439): sub
0x1540 (5440): rvstk 3
0x1542 (5442): rvstk 2
0x1544 (5444): rvstk 3
0x1546 (5446): mul
0x1547 (5447): add
0x1548 (5448): spc
0x1549 (5449): pushcp 1524
0x154D (5453): thrs
0x154E (5454): push 1
0x1554 (5460): push 3
0x155A (5466): push 2
0x1560 (5472): pshvar
0x1561 (5473): subscr
0x1562 (5474): subscr
0x1563 (5475): add
0x1564 (5476): st 2, 3 // variables[2][3] = pop()
0x1567 (5479): pop
0x1568 (5480): push 3
0x156E (5486): push 2
0x1574 (5492): pshvar
0x1575 (5493): push 2917
0x157B (5499): push 3235
0x1581 (5505): xor
0x1582 (5506): spc

0x1583 (5507): add
0x1584 (5508): rvstk 2
0x1586 (5510): subscr
0x1587 (5511): push 3
0x158D (5517): push 2
0x1593 (5523): push 1
0x1599 (5529): lpc
0x159A (5530): cpy
0x159B (5531): push 49
0x15A1 (5537): push 8
0x15A7 (5543): xor
0x15A8 (5544): add
0x15A9 (5545): rvstk 2
0x15AB (5547): push 2201
0x15B1 (5553): push 2319
0x15B7 (5559): xor
0x15B8 (5560): sub
0x15B9 (5561): push 95
0x15BF (5567): push 102
0x15C5 (5573): xor
0x15C6 (5574): rvstk 2
0x15C8 (5576): sub
0x15C9 (5577): rvstk 3
0x15CB (5579): rvstk 2
0x15CD (5581): rvstk 3
0x15CF (5583): mul
0x15D0 (5584): add
0x15D1 (5585): spc
0x15D2 (5586): cpy
0x15D3 (5587): ld 2, 5 // push(variables[2][5])
0x15D6 (5590): ld 2, 3 // push(variables[2][3])
0x15D9 (5593): asnarr
0x15DA (5594): clrstk
0x15DB (5595): push 718
0x15E1 (5601): push 564
0x15E7 (5607): xor
0x15E8 (5608): spc

0x15E9 (5609): rvstk 2
0x15EB (5611): sub
0x15EC (5612): push 0
0x15F2 (5618): gt
0x15F3 (5619): lpc
0x15F4 (5620): cpy
0x15F5 (5621): push 37
0x15FB (5627): push 28
0x1601 (5633): xor
0x1602 (5634): add
0x1603 (5635): rvstk 2
0x1605 (5637): push 1112
0x160B (5643): push 133
0x1611 (5649): xor
0x1612 (5650): sub
0x1613 (5651): push 70
0x1619 (5657): push 127
0x161F (5663): xor
0x1620 (5664): rvstk 2
0x1622 (5666): sub
0x1623 (5667): rvstk 3
0x1625 (5669): rvstk 2
0x1627 (5671): rvstk 3
0x1629 (5673): mul
0x162A (5674): add
0x162B (5675): spc
0x162C (5676): ld 2, 0 // push(variables[2][0])
0x162F (5679): ret

0x1630 (5680): push null
0x1632 (5682): ret


0x1633 (5683): st 1, 0 // variables[1][0] = pop()

0x1636 (5686): def 3334 // function start below

0x163A (5690): push 1007
0x1640 (5696): push 1526
0x1646 (5702): xor
0x1647 (5703): spc

0x1648 (5704): lnt
0x1649 (5705): ret

0x164A (5706): push 0
0x1650 (5712): push 2
0x1656 (5718): pshvar
0x1657 (5719): subscr
0x1658 (5720): subscr
0x1659 (5721): cpy
0x165A (5722): push 3982
0x1660 (5728): push 828
0x1666 (5734): xor
0x1667 (5735): spc

0x1668 (5736): ld 2, 3 // push(variables[2][3])
0x166B (5739): add
0x166C (5740): push 3
0x1672 (5746): push 2
0x1678 (5752): pshvar
0x1679 (5753): push 3812
0x167F (5759): push 834
0x1685 (5765): xor
0x1686 (5766): spc

0x1687 (5767): st 2, 3 // variables[2][3] = pop()
0x168A (5770): clrstk
0x168B (5771): ld 2, 2 // push(variables[2][2])
0x168E (5774): cpy
0x168F (5775): push 6
0x1695 (5781): push 1692
0x169B (5787): push 3496
0x16A1 (5793): xor
0x16A2 (5794): spc

0x16A3 (5795): push null
0x16A5 (5797): push 1
0x16AB (5803): push 1
0x16B1 (5809): pshvar
0x16B2 (5810): subscr
0x16B3 (5811): subscr
0x16B4 (5812): call 0
0x16B6 (5814): push 0
0x16BC (5820): push 2
0x16C2 (5826): pshvar
0x16C3 (5827): subscr
0x16C4 (5828): pushcp 3729
0x16C8 (5832): thrs
0x16C9 (5833): ld 2, 5 // push(variables[2][5])
0x16CC (5836): push 256
0x16D2 (5842): rvstk 2
0x16D4 (5844): st
0x16D5 (5845): lnt
0x16D6 (5846): lpc
0x16D7 (5847): cpy
0x16D8 (5848): push 125
0x16DE (5854): push 68
0x16E4 (5860): xor
0x16E5 (5861): add
0x16E6 (5862): rvstk 2
0x16E8 (5864): push 6078
0x16EE (5870): push 4371
0x16F4 (5876): xor
0x16F5 (5877): sub
0x16F6 (5878): push 139
0x16FC (5884): push 178
0x1702 (5890): xor
0x1703 (5891): rvstk 2
0x1705 (5893): sub
0x1706 (5894): rvstk 3
0x1708 (5896): rvstk 2
0x170A (5898): rvstk 3
0x170C (5900): mul
0x170D (5901): add
0x170E (5902): spc
0x170F (5903): push 5
0x1715 (5909): push 2
0x171B (5915): pshvar
0x171C (5916): subscr
0x171D (5917): subscr
0x171E (5918): push 1
0x1724 (5924): lpc
0x1725 (5925): cpy
0x1726 (5926): push 9
0x172C (5932): push 48
0x1732 (5938): xor
0x1733 (5939): add
0x1734 (5940): rvstk 2
0x1736 (5942): push 1277
0x173C (5948): push 449
0x1742 (5954): xor
0x1743 (5955): sub
0x1744 (5956): push 104
0x174A (5962): push 81
0x1750 (5968): xor
0x1751 (5969): rvstk 2
0x1753 (5971): sub
0x1754 (5972): rvstk 3
0x1756 (5974): rvstk 2
0x1758 (5976): rvstk 3
0x175A (5978): mul
0x175B (5979): add
0x175C (5980): spc
0x175D (5981): st
0x175E (5982): lnt
0x175F (5983): lpc
0x1760 (5984): cpy
0x1761 (5985): push 171
0x1767 (5991): push 146
0x176D (5997): xor
0x176E (5998): add
0x176F (5999): rvstk 2
0x1771 (6001): push 6540
0x1777 (6007): push 4294
0x177D (6013): xor
0x177E (6014): sub
0x177F (6015): push 131
0x1785 (6021): push 186
0x178B (6027): xor
0x178C (6028): rvstk 2
0x178E (6030): sub
0x178F (6031): rvstk 3
0x1791 (6033): rvstk 2
0x1793 (6035): rvstk 3
0x1795 (6037): mul
0x1796 (6038): add
0x1797 (6039): spc
0x1798 (6040): ld 2, 1 // push(variables[2][1])
0x179B (6043): ld 2, 2 // push(variables[2][2])
0x179E (6046): rvstk 2
0x17A0 (6048): subscr
0x17A1 (6049): ld 2, 0 // push(variables[2][0])
0x17A4 (6052): push 2
0x17AA (6058): push 2417
0x17B0 (6064): push 3064
0x17B6 (6070): xor
0x17B7 (6071): spc

0x17B8 (6072): ld 2, 5 // push(variables[2][5])
0x17BB (6075): push 3
0x17C1 (6081): rvstk 2
0x17C3 (6083): st
0x17C4 (6084): lpc
0x17C5 (6085): cpy
0x17C6 (6086): push 67
0x17CC (6092): push 122
0x17D2 (6098): xor
0x17D3 (6099): add
0x17D4 (6100): rvstk 2
0x17D6 (6102): push 7683
0x17DC (6108): push 2890
0x17E2 (6114): xor
0x17E3 (6115): sub
0x17E4 (6116): push 68
0x17EA (6122): push 125
0x17F0 (6128): xor
0x17F1 (6129): rvstk 2
0x17F3 (6131): sub
0x17F4 (6132): rvstk 3
0x17F6 (6134): rvstk 2
0x17F8 (6136): rvstk 3
0x17FA (6138): mul
0x17FB (6139): add
0x17FC (6140): spc
0x17FD (6141): push null
0x17FF (6143): push 4
0x1805 (6149): push 1
0x180B (6155): push 7987
0x1811 (6161): push 4016
0x1817 (6167): xor
0x1818 (6168): spc
